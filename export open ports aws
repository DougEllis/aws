import boto3
import csv

def get_all_instances_info(region='us-east-1', output_csv='instance_access_report.csv'):
    ec2 = boto3.resource('ec2', region_name=region)
    client = boto3.client('ec2', region_name=region)

    instances_info = []

    for instance in ec2.instances.all():
        instance_id = instance.id
        public_ip = instance.public_ip_address
        private_ip = instance.private_ip_address
        subnet_id = instance.subnet_id
        sg_ids = [sg['GroupId'] for sg in instance.security_groups]

        # Collect externally open ports (open to 0.0.0.0/0)
        open_ports = []
        try:
            sg_details = client.describe_security_groups(GroupIds=sg_ids)
            for sg in sg_details['SecurityGroups']:
                for perm in sg.get('IpPermissions', []):
                    from_port = perm.get('FromPort', 'All')
                    to_port = perm.get('ToPort', 'All')
                    for ip_range in perm.get('IpRanges', []):
                        cidr = ip_range['CidrIp']
                        if cidr == '0.0.0.0/0':
                            open_ports.append(f"{from_port}-{to_port}")
        except Exception as e:
            print(f"Error processing SGs for instance {instance_id}: {e}")
            open_ports = ['Error']

        # Check for Internet Gateway attachment
        igw_attached = False
        try:
            route_tables = client.describe_route_tables(
                Filters=[{'Name': 'association.subnet-id', 'Values': [subnet_id]}]
            )['RouteTables']

            for rt in route_tables:
                for route in rt.get('Routes', []):
                    if route.get('GatewayId', '').startswith('igw-'):
                        igw_attached = True
        except Exception as e:
            print(f"Error checking IGW for instance {instance_id}: {e}")

        instances_info.append({
            'Instance ID': instance_id,
            'Private IP': private_ip,
            'Public IP': public_ip if public_ip else '',
            'Open to Internet': 'Yes' if public_ip and open_ports else 'No',
            'Internet Gateway Attached': 'Yes' if igw_attached else 'No',
            'Externally Accessible Ports': ', '.join(open_ports) if open_ports else 'None'
        })

    # Write to CSV
    with open(output_csv, 'w', newline='') as csvfile:
        fieldnames = ['Instance ID', 'Private IP', 'Public IP', 'Open to Internet',
                      'Internet Gateway Attached', 'Externally Accessible Ports']
        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
        writer.writeheader()
        for row in instances_info:
            writer.writerow(row)

    print(f"\n Report exported to: {output_csv}")

# Run it
if __name__ == "__main__":
    get_all_instances_info(region='us-east-1')  # change region as needed
